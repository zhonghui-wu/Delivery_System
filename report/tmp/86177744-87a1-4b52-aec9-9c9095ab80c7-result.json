{"name": "用户名为空，密码正确", "status": "broken", "statusDetails": {"message": "KeyError: 'msg0'", "trace": "self = <test_case.test_login.TestLogin object at 0x000001B448071630>\ncaseTitle = '用户名为空，密码正确'\ninBody = {'password': 'c607d58e3618832f937d80d500a6046c', 'username': ''}\nexpData = {'code': 9999, 'data': '', 'flag': '松勤教育', 'msg': '该用户不存在!', ...}\n\n    @pytest.mark.parametrize('caseTitle,inBody,expData',get_excel_data('../data/testCaseFile_V1.5.xls',\"登录模块\",\"Login\",\n                          \"标题\",\"请求参数\",\"响应预期结果\"))\n    # @pytest.mark.parametrize('caseTitle,inBody,expData',get_excel_data(projectPath+'/data/testCaseFile_V1.5.xls',\"登录模块\",\"Login\",\n    #                      \"标题\",\"请求参数\",\"响应预期结果\"))\n    #@pytest.mark.parametrize('caseTitle,inBody,expData',get_yaml_caseData(projectPath+'/data/data.yaml'))\n    @allure.story(\"登录接口\")#接口级别\n    @allure.title(\"{caseTitle}\")#用例级别\n    @pytest.mark.login  # mark 标签\n    def test_login(self,caseTitle,inBody,expData):\n        #allure 增加selenium截图的操作\n        allure.attach.file('../data/123.png','登录的截图',\n                           attachment_type=allure.attachment_type.PNG)\n    \n        print('---登录接口正在运行---')\n        try:\n            res = Login().login(inBody)  # 1- 调用登录的接口函数\n            assert res['msg'] == expData['msg0']#断言：预期与实际相比较，一致返回真，不一致-假\n        except Exception as err:#异常处理\n            log.error(traceback.format_exc())#具体的报错信息\n>           raise err#  需要抛出异常给pytest--报告需要体现！\n\ntest_login.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_case.test_login.TestLogin object at 0x000001B448071630>\ncaseTitle = '用户名为空，密码正确'\ninBody = {'password': 'c607d58e3618832f937d80d500a6046c', 'username': ''}\nexpData = {'code': 9999, 'data': '', 'flag': '松勤教育', 'msg': '该用户不存在!', ...}\n\n    @pytest.mark.parametrize('caseTitle,inBody,expData',get_excel_data('../data/testCaseFile_V1.5.xls',\"登录模块\",\"Login\",\n                          \"标题\",\"请求参数\",\"响应预期结果\"))\n    # @pytest.mark.parametrize('caseTitle,inBody,expData',get_excel_data(projectPath+'/data/testCaseFile_V1.5.xls',\"登录模块\",\"Login\",\n    #                      \"标题\",\"请求参数\",\"响应预期结果\"))\n    #@pytest.mark.parametrize('caseTitle,inBody,expData',get_yaml_caseData(projectPath+'/data/data.yaml'))\n    @allure.story(\"登录接口\")#接口级别\n    @allure.title(\"{caseTitle}\")#用例级别\n    @pytest.mark.login  # mark 标签\n    def test_login(self,caseTitle,inBody,expData):\n        #allure 增加selenium截图的操作\n        allure.attach.file('../data/123.png','登录的截图',\n                           attachment_type=allure.attachment_type.PNG)\n    \n        print('---登录接口正在运行---')\n        try:\n            res = Login().login(inBody)  # 1- 调用登录的接口函数\n>           assert res['msg'] == expData['msg0']#断言：预期与实际相比较，一致返回真，不一致-假\nE           KeyError: 'msg0'\n\ntest_login.py:39: KeyError"}, "attachments": [{"name": "登录的截图", "source": "2c4c961f-e2d6-414e-b7f7-44f9cceab801-attachment.png", "type": "image/png"}, {"name": "log", "source": "9d55c74e-e01f-4887-99a6-46fdec1f9f5e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "caseTitle", "value": "'用户名为空，密码正确'"}, {"name": "inBody", "value": "{'username': '', 'password': 'xintian'}"}, {"name": "expData", "value": "{'code': 9999, 'data': '', 'flag': '松勤教育', 'msg': '该用户不存在!', 'success': False}"}], "start": 1622950447484, "stop": 1622950447562, "uuid": "062d31ee-e0f1-4498-9ac4-ec5c32d31ee2", "historyId": "4332cfe6016542155009560a4344982e", "testCaseId": "da88586f2e77db1a02b8abcd6761bb9a", "fullName": "test_case.test_login.TestLogin#test_login", "labels": [{"name": "epic", "value": "点餐系统"}, {"name": "feature", "value": "登录模块"}, {"name": "story", "value": "登录接口"}, {"name": "tag", "value": "login"}, {"name": "tag", "value": "Login"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "XinTian"}, {"name": "thread", "value": "11268-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_login"}]}